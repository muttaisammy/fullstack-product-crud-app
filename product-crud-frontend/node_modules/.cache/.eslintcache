[{"C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\index.js":"1","C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\App.js":"2","C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\reportWebVitals.js":"3","C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\pages\\AddProduct.js":"4","C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\pages\\Products.js":"5","C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\components\\Product.js":"6","C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\features\\apiCalls.js":"7"},{"size":554,"mtime":1686738665273,"results":"8","hashOfConfig":"9"},{"size":530,"mtime":1686740766253,"results":"10","hashOfConfig":"9"},{"size":375,"mtime":1686721662729,"results":"11","hashOfConfig":"9"},{"size":5070,"mtime":1687335784619,"results":"12","hashOfConfig":"9"},{"size":1191,"mtime":1686738631206,"results":"13","hashOfConfig":"9"},{"size":2096,"mtime":1686737914489,"results":"14","hashOfConfig":"9"},{"size":1522,"mtime":1686737975494,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lzrc2n",{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\index.js",[],[],"C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\App.js",["39"],[],"import logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport Products from \"./pages/Products\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport AddProduct from \"./pages/AddProduct\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        <Route path=\"/addProduct\" element={<AddProduct />} />\r\n        <Route path=\"/\" element={<Products/>} />\r\n        <Route path=\"/updateProduct/:id\" element={<AddProduct />} />\r\n\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\pages\\AddProduct.js",["40","41"],[],"\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  addProduct,\r\n  updateProduct,\r\n  getProductById,\r\n  uploadProductThumbnail,\r\n} from \"../features/apiCalls\";\r\n\r\nconst BASE_API_URL = \"http://localhost:8081\";\r\nconst AddProduct = () => {\r\n  const { id } = useParams();\r\n  const [defaultValue, setDeafaultValue] = useState({\r\n    productTitle: \"\",\r\n    productDescription: \"\",\r\n    productPrice: \"\",\r\n    availableQuantity: \"\",\r\n    productId: Math.floor(Math.random())\r\n  });\r\n  const [selectedImage, setSelectedImage] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const getProduct = async () => {\r\n      const { data } = await getProductById(id);\r\n      console.log(data);\r\n      if (data) setDeafaultValue({ ...data[0] });\r\n    };\r\n    getProduct();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    let url;\r\n    if (selectedImage) {\r\n      url = URL.createObjectURL(selectedImage);\r\n      setPreviewUrl(url);\r\n    }\r\n    return () => {\r\n      URL.revokeObjectURL(url);\r\n    };\r\n  }, [selectedImage]);\r\n\r\n  const {\r\n    productTitle,\r\n    productDescription,\r\n    productPrice,\r\n    availableQuantity,\r\n    productThumbnail,\r\n    productId,\r\n  } = defaultValue;\r\n\r\n  const handle3000 = async (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target);\r\n    let formData = new FormData(e.target);\r\n    let fileFormData = new FormData();\r\n    let files = e.target[4].files;\r\n    const values = Object.fromEntries(formData.entries());\r\n    const pId = !productId\r\n      ? values.productTitle.toLowerCase().replaceAll(/[\\s\\t]+/g, \"-\")\r\n      : productId;\r\n    fileFormData.append(\"productId\", pId);\r\n    delete values.productThumbnail;\r\n    try {\r\n      if (!!selectedImage) {\r\n        fileFormData.append(\"productThumbnail\", files[0]);\r\n        let { data, error } = await uploadProductThumbnail(fileFormData);\r\n        if (error) throw new Error(error);\r\n        values[\"productThumbnail\"] = data;\r\n      }\r\n      if (pId && !!productId) {\r\n        let { data, error } = await updateProduct(values, productId);\r\n        if (error) throw new Error(error);\r\n      } else if (pId) {\r\n        let formValues = {\r\n          productId: pId,\r\n          ...values,\r\n          productThumbnail: \"test-product.jpg\",\r\n        };\r\n        let { data, error } = await addProduct(formValues);\r\n        if (error) throw new Error(error);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"container max-w-5xl py-10\">\r\n      <div className=\"flex space-x-6 mb-10 items-center\">\r\n        <button\r\n          onClick={() => navigate(-1)}\r\n          className=\"h-10 leading-none text-xl\"\r\n        >\r\n          {\"<\"}\r\n        </button>\r\n        <h2 className=\"text--title\">\r\n          {defaultValue.productTitle ? \"Update Product\" : \"Add Product\"}\r\n        </h2>\r\n      </div>\r\n      <div className=\"flex flex-col\">\r\n        <form onSubmit={handle3000}>\r\n          <div className=\"mb-4\">\r\n            <label>Product Title</label>\r\n            <input\r\n              defaultValue={productTitle || \"\"}\r\n              name=\"productTitle\"\r\n              placeholder=\"Enter Product Title...\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label>Product Description</label>\r\n            <textarea\r\n              defaultValue={productDescription || \"\"}\r\n              name=\"productDescription\"\r\n              className=\"resize-none\"\r\n              rows={5}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label>Product Price</label>\r\n            <input\r\n              defaultValue={productPrice}\r\n              name=\"productPrice\"\r\n              placeholder=\"Enter Product Price...\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <label>Available Quantity</label>\r\n            <input\r\n              defaultValue={availableQuantity}\r\n              name=\"availableQuantity\"\r\n              placeholder=\"Enter Available Quantity...\"\r\n            />\r\n          </div>\r\n          <div className=\"mb-10\">\r\n            <label>Product Thumbnail</label>\r\n            <input\r\n              onChange={(e) => {\r\n                setSelectedImage(e.target.files[0]);\r\n              }}\r\n              accept=\"image/*\"\r\n              name=\"productThumbnail\"\r\n              type={\"file\"}\r\n            />\r\n            {(productThumbnail || previewUrl) && (\r\n              <img\r\n                className=\"h-48\"\r\n                alt=\"thumbnail\"\r\n                src={\r\n                  previewUrl\r\n                    ? previewUrl\r\n                    : `${BASE_API_URL}/uploads/${productThumbnail}`\r\n                }\r\n              />\r\n            )}\r\n          </div>\r\n          <div className=\"flex items-center mb-5\">\r\n            <button className=\"w-full\">submit</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProduct;","C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\pages\\Products.js",[],[],"C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\components\\Product.js",[],[],"C:\\Users\\Grace\\Desktop\\code\\fullstack-product-crud-app\\product-crud-frontend\\src\\features\\apiCalls.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":1,"column":8,"nodeType":"44","messageId":"45","endLine":1,"endColumn":12},{"ruleId":"42","severity":1,"message":"46","line":74,"column":15,"nodeType":"44","messageId":"45","endLine":74,"endColumn":19},{"ruleId":"42","severity":1,"message":"46","line":82,"column":15,"nodeType":"44","messageId":"45","endLine":82,"endColumn":19},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'data' is assigned a value but never used."]