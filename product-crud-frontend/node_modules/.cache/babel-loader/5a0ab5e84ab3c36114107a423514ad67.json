{"ast":null,"code":"const mysql = require(\"mysql\");\nconst path = require(\"path\");\nconst cors = require(\"cors\");\nconst multer = require(\"multer\");\nconst express = require(\"express\");\nconst fs = require(\"fs\");\nrequire('dotenv').config();\nconst db = mysql.createConnection({\n  host: \"localhost\",\n  user: \"root\",\n  password: \"mutsam\",\n  database: \"PRODUCTS\"\n});\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, \"uploads\");\n  },\n  filename: (req, file, cb) => {\n    console.log(req.body, \"in\");\n    cb(null, `${req.body.productId}${path.extname(file.originalname)}`);\n  }\n});\nconst upload = multer({\n  storage: storage\n});\nconst app = express();\napp.use(cors());\napp.use(express.json());\napp.use('/uploads', express.static(path.join(__dirname, 'uploads')));\napp.post(\"/thumbnailUpload\", upload.single(\"productThumbnail\"), (req, res) => {\n  try {\n    console.log(req.file);\n    return res.json({\n      data: req.file.filename\n    });\n  } catch (err) {\n    res.json({\n      error: err.message\n    });\n  }\n});\napp.get(\"/products\", (req, res) => {\n  const q = \"select * from product\";\n  db.query(q, (err, data) => {\n    if (err) {\n      res.send(err);\n    } else {\n      res.json({\n        data\n      });\n    }\n  });\n});\napp.post(\"/products\", (req, res) => {\n  const q = `insert into product(productID, productTitle, productDescription, productPrice, availableQuantity, productThumbnail)\n      values(?)`;\n  const values = [...Object.values(req.body)];\n  db.query(q, [values], (err, data) => {\n    if (err) return res.json({\n      error: err.sqlMessage\n    });\n    if (data.affectedRows == 1) {\n      res.send('Data inserted successfully');\n    }\n  });\n});\napp.get(\"/products/:productId\", (req, res) => {\n  const id = req.params.productId;\n  const q = \"SELECT * FROM product where productId=?\";\n  db.query(q, [id], (err, data) => {\n    if (err) {\n      console.log(err);\n    } else {\n      if (data.length > 0) {\n        res.json(data);\n      }\n      res.json({\n        message: 'No data found!'\n      });\n    }\n  });\n});\napp.put(\"/products/:productId\", (req, res) => {\n  const id = req.params.productId;\n  const data = req.body;\n  if (data.productPrice) data.productPrice = Number.parseInt(data.productPrice);\n  if (data.availableQuantity) data.availableQuantity = Number.parseInt(data.availableQuantity);\n  const q = \"update product set \" + Object.keys(data).map(k => `${k} = ?`).join(\",\") + \" where productId='\" + id + \"'\";\n  db.query(q, [...Object.values(data)], (err, out) => {\n    console.log(err, out);\n    if (err) return res.json({\n      error: err.message\n    });else {\n      return res.json({\n        data: out\n      });\n    }\n  });\n});\napp.delete(\"/products/:productId\", (req, res) => {\n  const id = req.params.productId;\n  console.log(\"deleting \" + id, req.body);\n  const {\n    productThumbnail\n  } = req.body;\n  console.log(req.body);\n  const q = `DELETE FROM product WHERE productId= ?`;\n  db.query(q, [id], (err, data) => {\n    console.log(err, data);\n    if (err) return res.json({\n      error: err.sqlMessage\n    });else res.json({\n      data\n    });\n  });\n});\napp.listen(3000, () => {\n  console.log(`server runnning PORT 3000`);\n  db.connect(err => {\n    if (err) throw err;\n    console.log('Database connected');\n  });\n});","map":{"version":3,"names":["mysql","require","path","cors","multer","express","fs","config","db","createConnection","host","user","password","database","storage","diskStorage","destination","req","file","cb","filename","console","log","body","productId","extname","originalname","upload","app","use","json","static","join","__dirname","post","single","res","data","err","error","message","get","q","query","send","values","Object","sqlMessage","affectedRows","id","params","length","put","productPrice","Number","parseInt","availableQuantity","keys","map","k","out","delete","productThumbnail","listen","connect"],"sources":["C:/Users/Grace/Desktop/code/fullstack-product-crud-app/product-crud-frontend/src/index.js"],"sourcesContent":["const mysql = require(\"mysql\");\r\nconst path = require(\"path\");\r\nconst cors = require(\"cors\");\r\nconst multer = require(\"multer\");\r\nconst express = require(\"express\");\r\nconst fs = require(\"fs\");\r\nrequire('dotenv').config()\r\nconst db = mysql.createConnection({\r\n  host: \"localhost\",\r\n  user: \"root\",\r\n  password: \"mutsam\",\r\n  database: \"PRODUCTS\",\r\n});\r\n\r\nconst storage = multer.diskStorage({\r\n  destination: (req, file, cb) => {\r\n    cb(null, \"uploads\");\r\n  },\r\n  filename: (req, file, cb) => {\r\n    console.log(req.body, \"in\");\r\n    cb(null, `${req.body.productId}${path.extname(file.originalname)}`);\r\n  },\r\n});\r\n\r\nconst upload = multer({ storage: storage });\r\n\r\nconst app = express();\r\napp.use(cors())\r\napp.use(express.json())\r\napp.use('/uploads', express.static(path.join(__dirname ,'uploads')));\r\n\r\n\r\napp.post(\"/thumbnailUpload\", upload.single(\"productThumbnail\"), (req, res) => {\r\n  try {\r\n    console.log(req.file) ;\r\n    return res.json({ data: req.file.filename });\r\n  } catch (err) {\r\n    res.json({ error: err.message });\r\n  }\r\n});\r\n\r\napp.get(\"/products\", (req, res) => {\r\n    const q = \"select * from product\";\r\n    db.query(q, (err, data) => {\r\n      if (err) {\r\n        res.send(err)\r\n      }else {\r\n        res.json({ data });\r\n      }\r\n\r\n    });\r\n  });\r\n  app.post(\"/products\", (req, res) => {\r\n    const q = `insert into product(productID, productTitle, productDescription, productPrice, availableQuantity, productThumbnail)\r\n      values(?)`;\r\n    const values = [...Object.values(req.body)];\r\n    db.query(q, [values], (err, data) => {\r\n      if (err) return res.json({ error: err.sqlMessage });\r\n      if(data.affectedRows == 1) {\r\n        res.send('Data inserted successfully')\r\n      }\r\n    });\r\n  });\r\n  \r\n  app.get(\"/products/:productId\", (req, res) => {\r\n    const id = req.params.productId;\r\n    const q = \"SELECT * FROM product where productId=?\";\r\n    db.query(q, [id], (err, data) => {\r\n      if(err) {\r\n        console.log(err)\r\n      }else {\r\n        if(data.length > 0) {\r\n          res.json(data)\r\n        }\r\n        res.json({message: 'No data found!'})\r\n      \r\n      }\r\n    });\r\n  });\r\n  \r\n  app.put(\"/products/:productId\", (req, res) => {\r\n    const id = req.params.productId;\r\n    const data = req.body;\r\n    if (data.productPrice) data.productPrice = Number.parseInt(data.productPrice);\r\n    if (data.availableQuantity)\r\n      data.availableQuantity = Number.parseInt(data.availableQuantity);\r\n    const q =\r\n      \"update product set \" +\r\n      Object.keys(data)\r\n        .map((k) => `${k} = ?`)\r\n        .join(\",\") +\r\n      \" where productId='\" +\r\n      id +\r\n      \"'\";\r\n    db.query(q, [...Object.values(data)], (err, out) => {\r\n      console.log(err, out);\r\n      if (err) return res.json({ error: err.message });\r\n      else {\r\n        return res.json({ data: out });\r\n      }\r\n    });\r\n  });\r\n  \r\n  app.delete(\"/products/:productId\", (req, res) => {\r\n    const id = req.params.productId;\r\n    console.log(\"deleting \" + id, req.body);\r\n    const { productThumbnail } = req.body;\r\n    console.log(req.body);\r\n    const q = `DELETE FROM product WHERE productId= ?`;\r\n    db.query(q, [id], (err, data) => {\r\n      console.log(err, data);\r\n      if (err) return res.json({ error: err.sqlMessage });\r\n      else res.json({data})\r\n    })\r\n});\r\n\r\napp.listen(3000, () => {\r\n  console.log(`server runnning PORT 3000`)\r\n  db.connect((err) => {\r\n    if(err) throw err;\r\n\r\n    console.log('Database connected')\r\n  })\r\n})"],"mappings":"AAAA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAO,CAAC;AAC9B,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMI,OAAO,GAAGJ,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMK,EAAE,GAAGL,OAAO,CAAC,IAAI,CAAC;AACxBA,OAAO,CAAC,QAAQ,CAAC,CAACM,MAAM,EAAE;AAC1B,MAAMC,EAAE,GAAGR,KAAK,CAACS,gBAAgB,CAAC;EAChCC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAE,MAAM;EACZC,QAAQ,EAAE,QAAQ;EAClBC,QAAQ,EAAE;AACZ,CAAC,CAAC;AAEF,MAAMC,OAAO,GAAGV,MAAM,CAACW,WAAW,CAAC;EACjCC,WAAW,EAAE,CAACC,GAAG,EAAEC,IAAI,EAAEC,EAAE,KAAK;IAC9BA,EAAE,CAAC,IAAI,EAAE,SAAS,CAAC;EACrB,CAAC;EACDC,QAAQ,EAAE,CAACH,GAAG,EAAEC,IAAI,EAAEC,EAAE,KAAK;IAC3BE,OAAO,CAACC,GAAG,CAACL,GAAG,CAACM,IAAI,EAAE,IAAI,CAAC;IAC3BJ,EAAE,CAAC,IAAI,EAAG,GAAEF,GAAG,CAACM,IAAI,CAACC,SAAU,GAAEtB,IAAI,CAACuB,OAAO,CAACP,IAAI,CAACQ,YAAY,CAAE,EAAC,CAAC;EACrE;AACF,CAAC,CAAC;AAEF,MAAMC,MAAM,GAAGvB,MAAM,CAAC;EAAEU,OAAO,EAAEA;AAAQ,CAAC,CAAC;AAE3C,MAAMc,GAAG,GAAGvB,OAAO,EAAE;AACrBuB,GAAG,CAACC,GAAG,CAAC1B,IAAI,EAAE,CAAC;AACfyB,GAAG,CAACC,GAAG,CAACxB,OAAO,CAACyB,IAAI,EAAE,CAAC;AACvBF,GAAG,CAACC,GAAG,CAAC,UAAU,EAAExB,OAAO,CAAC0B,MAAM,CAAC7B,IAAI,CAAC8B,IAAI,CAACC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAC;AAGpEL,GAAG,CAACM,IAAI,CAAC,kBAAkB,EAAEP,MAAM,CAACQ,MAAM,CAAC,kBAAkB,CAAC,EAAE,CAAClB,GAAG,EAAEmB,GAAG,KAAK;EAC5E,IAAI;IACFf,OAAO,CAACC,GAAG,CAACL,GAAG,CAACC,IAAI,CAAC;IACrB,OAAOkB,GAAG,CAACN,IAAI,CAAC;MAAEO,IAAI,EAAEpB,GAAG,CAACC,IAAI,CAACE;IAAS,CAAC,CAAC;EAC9C,CAAC,CAAC,OAAOkB,GAAG,EAAE;IACZF,GAAG,CAACN,IAAI,CAAC;MAAES,KAAK,EAAED,GAAG,CAACE;IAAQ,CAAC,CAAC;EAClC;AACF,CAAC,CAAC;AAEFZ,GAAG,CAACa,GAAG,CAAC,WAAW,EAAE,CAACxB,GAAG,EAAEmB,GAAG,KAAK;EAC/B,MAAMM,CAAC,GAAG,uBAAuB;EACjClC,EAAE,CAACmC,KAAK,CAACD,CAAC,EAAE,CAACJ,GAAG,EAAED,IAAI,KAAK;IACzB,IAAIC,GAAG,EAAE;MACPF,GAAG,CAACQ,IAAI,CAACN,GAAG,CAAC;IACf,CAAC,MAAK;MACJF,GAAG,CAACN,IAAI,CAAC;QAAEO;MAAK,CAAC,CAAC;IACpB;EAEF,CAAC,CAAC;AACJ,CAAC,CAAC;AACFT,GAAG,CAACM,IAAI,CAAC,WAAW,EAAE,CAACjB,GAAG,EAAEmB,GAAG,KAAK;EAClC,MAAMM,CAAC,GAAI;AACf,gBAAgB;EACZ,MAAMG,MAAM,GAAG,CAAC,GAAGC,MAAM,CAACD,MAAM,CAAC5B,GAAG,CAACM,IAAI,CAAC,CAAC;EAC3Cf,EAAE,CAACmC,KAAK,CAACD,CAAC,EAAE,CAACG,MAAM,CAAC,EAAE,CAACP,GAAG,EAAED,IAAI,KAAK;IACnC,IAAIC,GAAG,EAAE,OAAOF,GAAG,CAACN,IAAI,CAAC;MAAES,KAAK,EAAED,GAAG,CAACS;IAAW,CAAC,CAAC;IACnD,IAAGV,IAAI,CAACW,YAAY,IAAI,CAAC,EAAE;MACzBZ,GAAG,CAACQ,IAAI,CAAC,4BAA4B,CAAC;IACxC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFhB,GAAG,CAACa,GAAG,CAAC,sBAAsB,EAAE,CAACxB,GAAG,EAAEmB,GAAG,KAAK;EAC5C,MAAMa,EAAE,GAAGhC,GAAG,CAACiC,MAAM,CAAC1B,SAAS;EAC/B,MAAMkB,CAAC,GAAG,yCAAyC;EACnDlC,EAAE,CAACmC,KAAK,CAACD,CAAC,EAAE,CAACO,EAAE,CAAC,EAAE,CAACX,GAAG,EAAED,IAAI,KAAK;IAC/B,IAAGC,GAAG,EAAE;MACNjB,OAAO,CAACC,GAAG,CAACgB,GAAG,CAAC;IAClB,CAAC,MAAK;MACJ,IAAGD,IAAI,CAACc,MAAM,GAAG,CAAC,EAAE;QAClBf,GAAG,CAACN,IAAI,CAACO,IAAI,CAAC;MAChB;MACAD,GAAG,CAACN,IAAI,CAAC;QAACU,OAAO,EAAE;MAAgB,CAAC,CAAC;IAEvC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFZ,GAAG,CAACwB,GAAG,CAAC,sBAAsB,EAAE,CAACnC,GAAG,EAAEmB,GAAG,KAAK;EAC5C,MAAMa,EAAE,GAAGhC,GAAG,CAACiC,MAAM,CAAC1B,SAAS;EAC/B,MAAMa,IAAI,GAAGpB,GAAG,CAACM,IAAI;EACrB,IAAIc,IAAI,CAACgB,YAAY,EAAEhB,IAAI,CAACgB,YAAY,GAAGC,MAAM,CAACC,QAAQ,CAAClB,IAAI,CAACgB,YAAY,CAAC;EAC7E,IAAIhB,IAAI,CAACmB,iBAAiB,EACxBnB,IAAI,CAACmB,iBAAiB,GAAGF,MAAM,CAACC,QAAQ,CAAClB,IAAI,CAACmB,iBAAiB,CAAC;EAClE,MAAMd,CAAC,GACL,qBAAqB,GACrBI,MAAM,CAACW,IAAI,CAACpB,IAAI,CAAC,CACdqB,GAAG,CAAEC,CAAC,IAAM,GAAEA,CAAE,MAAK,CAAC,CACtB3B,IAAI,CAAC,GAAG,CAAC,GACZ,oBAAoB,GACpBiB,EAAE,GACF,GAAG;EACLzC,EAAE,CAACmC,KAAK,CAACD,CAAC,EAAE,CAAC,GAAGI,MAAM,CAACD,MAAM,CAACR,IAAI,CAAC,CAAC,EAAE,CAACC,GAAG,EAAEsB,GAAG,KAAK;IAClDvC,OAAO,CAACC,GAAG,CAACgB,GAAG,EAAEsB,GAAG,CAAC;IACrB,IAAItB,GAAG,EAAE,OAAOF,GAAG,CAACN,IAAI,CAAC;MAAES,KAAK,EAAED,GAAG,CAACE;IAAQ,CAAC,CAAC,CAAC,KAC5C;MACH,OAAOJ,GAAG,CAACN,IAAI,CAAC;QAAEO,IAAI,EAAEuB;MAAI,CAAC,CAAC;IAChC;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;AAEFhC,GAAG,CAACiC,MAAM,CAAC,sBAAsB,EAAE,CAAC5C,GAAG,EAAEmB,GAAG,KAAK;EAC/C,MAAMa,EAAE,GAAGhC,GAAG,CAACiC,MAAM,CAAC1B,SAAS;EAC/BH,OAAO,CAACC,GAAG,CAAC,WAAW,GAAG2B,EAAE,EAAEhC,GAAG,CAACM,IAAI,CAAC;EACvC,MAAM;IAAEuC;EAAiB,CAAC,GAAG7C,GAAG,CAACM,IAAI;EACrCF,OAAO,CAACC,GAAG,CAACL,GAAG,CAACM,IAAI,CAAC;EACrB,MAAMmB,CAAC,GAAI,wCAAuC;EAClDlC,EAAE,CAACmC,KAAK,CAACD,CAAC,EAAE,CAACO,EAAE,CAAC,EAAE,CAACX,GAAG,EAAED,IAAI,KAAK;IAC/BhB,OAAO,CAACC,GAAG,CAACgB,GAAG,EAAED,IAAI,CAAC;IACtB,IAAIC,GAAG,EAAE,OAAOF,GAAG,CAACN,IAAI,CAAC;MAAES,KAAK,EAAED,GAAG,CAACS;IAAW,CAAC,CAAC,CAAC,KAC/CX,GAAG,CAACN,IAAI,CAAC;MAACO;IAAI,CAAC,CAAC;EACvB,CAAC,CAAC;AACN,CAAC,CAAC;AAEFT,GAAG,CAACmC,MAAM,CAAC,IAAI,EAAE,MAAM;EACrB1C,OAAO,CAACC,GAAG,CAAE,2BAA0B,CAAC;EACxCd,EAAE,CAACwD,OAAO,CAAE1B,GAAG,IAAK;IAClB,IAAGA,GAAG,EAAE,MAAMA,GAAG;IAEjBjB,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACnC,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}